"use strict";var precacheConfig=[["/hangman-app/index.html","ba1d8b84147bc6bb1f0257ea36f1b2b0"],["/hangman-app/static/css/main.e0578daa.css","c8f88b19c6bdb9bd30a81d79a6965f27"],["/hangman-app/static/js/main.30e73176.js","7ee9107afd6abb4bb12816c2b73875da"],["/hangman-app/static/media/0.db9097e8.jpg","db9097e874e68b7ed7115ff05ffcb880"],["/hangman-app/static/media/1.fbff4784.jpg","fbff4784004cc97463c883477a0090d1"],["/hangman-app/static/media/2.c4ea9528.jpg","c4ea9528b67823bd94c90de3d97d75a3"],["/hangman-app/static/media/3.62a781c8.jpg","62a781c89c590abb27129638d9d18c4d"],["/hangman-app/static/media/4.0f8ca81e.jpg","0f8ca81ee9f7b2bc27102267f9e23864"],["/hangman-app/static/media/5.1b557aa7.jpg","1b557aa7ccfa88b6b3f4723c27d3f2d6"],["/hangman-app/static/media/6.c80394c2.jpg","c80394c2a96ffad09a9df4e4815745f2"],["/hangman-app/static/media/paper.8881a1ca.jpg","8881a1ca191e857405b967689079d94e"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){e=new URL(e);return"/"===e.pathname.slice(-1)&&(e.pathname+=a),e.toString()},cleanResponse=function(a){return a.redirected?("body"in a?Promise.resolve(a.body):a.blob()).then(function(e){return new Response(e,{headers:a.headers,status:a.status,statusText:a.statusText})}):Promise.resolve(a)},createCacheKey=function(e,a,n,t){e=new URL(e);return t&&e.pathname.match(t)||(e.search+=(e.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(n)),e.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var n=new URL(a).pathname;return e.some(function(e){return n.match(e)})},stripIgnoredUrlParameters=function(e,n){e=new URL(e);return e.hash="",e.search=e.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(a){return n.every(function(e){return!e.test(a[0])})}).map(function(e){return e.join("=")}).join("&"),e.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],e=e[1],a=new URL(a,self.location),e=createCacheKey(a,hashParamName,e,/\.\w{8}\./);return[a.toString(),e]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(t){return setOfCachedUrls(t).then(function(n){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!n.has(a)){var e=new Request(a,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+a+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return t.put(a,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var n=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(a){return a.keys().then(function(e){return Promise.all(e.map(function(e){if(!n.has(e.url))return a.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(a){var n,e,t;"GET"===a.request.method&&(n=stripIgnoredUrlParameters(a.request.url,ignoreUrlParametersMatching),t="index.html",(e=urlsToCacheKeys.has(n))||(n=addDirectoryIndex(n,t),e=urlsToCacheKeys.has(n)),t="/hangman-app/index.html",!e&&"navigate"===a.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],a.request.url)&&(n=new URL(t,self.location).toString(),e=urlsToCacheKeys.has(n)),e&&a.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(n)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',a.request.url,e),fetch(a.request)})))});